{% comment %}
  Main site header with responsive navigation, search, and cart functionality.
  Displays logo, mobile menu toggle, search functionality, and cart/account icons.
  Uses CSS Grid for responsive layout that adapts between mobile and desktop views.

  Layout:
  - Mobile: [menu-icon | logo | search/cart icons]
  - Desktop: [navigation | logo | search/cart icons]

  Features:
  - Responsive mobile menu with drawer
  - Logo with optional image or text fallback
  - Search functionality with responsive visibility
  - Cart icon with item count
  - Account links
  - Accessibility-compliant navigation

  Dependencies:
  - Requires header-drawer section for mobile menu
  - Uses modal-dialog-toggle for menu interactions
  - Integrates with header-search snippet

  Schema settings control:
  - Logo display and sizing
  - Navigation menu assignment
  - Search functionality
  - Cart and account link visibility
{% endcomment %}

{%- capture color_scheme -%}
  {%- render '@color-scheme', color_scheme: section.settings.color_scheme -%}
{%- endcapture -%}

{%- capture logo -%}
  {%- # theme-check-disable CaptureOnContentForBlock -%}
  {%- content_for 'block', type: 'header-logo', id: 'header-logo' -%}
  {% # theme-check-enable CaptureOnContentForBlock %}
{%- endcapture -%}

<header class='{{ color_scheme }} relative grid items-center grid-cols-[1fr_auto_1fr] px-sm py-md bg-background [grid-template-areas:"left-icons_heading_icons"] lg:[grid-template-areas:"navigation_heading_icons"] lg:gap-x-sm data-[logo-position=left]:lg:[grid-template-areas:"heading_navigation_icons"] data-[logo-position=left]:lg:grid-cols-[auto_auto_1fr]' data-logo-position='{{ section.settings.logo_position }}'>
  <div class='flex gap-sm items-center justify-start [grid-area:left-icons] lg:hidden'>
    {%- content_for 'block', type: 'header-menu', id: 'header-menu', variant: 'mobile' -%}

    {%- render 'header-search', wrapper_class: 'md:hidden' -%}
  </div>

  <div class='flex place-items-center place-content-center [grid-area:heading]'>
    {{- logo -}}
  </div>

  <div class='hidden lg:grid [grid-area:navigation]'>
    {%- # theme-check-disable UniqueStaticBlockId -%}
    {%- content_for 'block', type: 'header-menu', id: 'header-menu' -%}
    {%- # theme-check-enable UniqueStaticBlockId -%}
  </div>

  <div class='flex items-center justify-end gap-sm mg:gap-md [grid-area:icons]'>
    {%- render 'header-search', wrapper_class: 'max-md:hidden' -%}

    {%- if shop.customer_accounts_enabled -%}
      <a
        href='{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}'
        class='inline-flex'
      >
        {% render 'icon' with 'icon-account', size: 24 %}
        <span class='sr-only'>
          {%- liquid
            if customer
              echo 'customer.account_fallback' | t
            else
              echo 'customer.log_in' | t
            endif
          -%}
        </span>
      </a>
    {%- endif -%}

    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when '@app' -%}
          {% render block %}
      {%- endcase -%}
    {%- endfor -%}

    {%- capture menu_toggle_button -%}
      <a
        aria-haspopup='dialog'
        aria-controls='cart-drawer-dialog'
        href='{{ routes.cart_url }}' class='inline-flex place-items-center relative' id='cart-icon-bubble'>
        {%- liquid
          if cart == empty
            render 'icon' with 'icon-cart', size: 24
          else
            render 'icon' with 'icon-cart', size: 24
          endif
        -%}
        <span class='sr-only'>{{ 'templates.cart.cart' | t }}</span>
        <div class='empty:hidden absolute bg-accent-01 text-foreground-inverse rounded-full inline-flex items-center justify-center -top-1 -right-1 w-4 h-4 text-center text-xs leading-none'>
          {%- render '@needs-script', entries: 'component-cart-total.js' -%}
          <cart-total
            translation='{ "cart_count": {{ 'sections.header.cart_count' | t: '###count###' | json }} }'
          >
            <span class='sr-only'>{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </cart-total>
        </div>
      </a>
    {%- endcapture -%}

    {%- if template.name == 'cart' -%}
      {{- menu_toggle_button -}}
    {%- else -%}
      {%- render 'modal-dialog-toggle',
        modal_id: 'cart-drawer-dialog',
        label: 'Toggle Modal',
        toggle_element: menu_toggle_button
      -%}
    {%- endif -%}
  </div>
</header>

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "limit": 1,
  "enabled_on": {
    "groups": ["header"]
  },
  "presets": [
    {
      "name": "t:sections.header.name"
    }
  ],
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "label": "t:settings.logo_position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.enable_country_selector.header",
      "info": "t:sections.header.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.enable_language_selector.header",
      "info": "t:sections.header.settings.enable_language_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    }
  ]
}
{% endschema %}
