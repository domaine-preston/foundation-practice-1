{% doc %}
  Render an image tag with responsive features and lazy loading.
  See: https://shopify.dev/docs/api/liquid/filters/image_tag

  @param {object} image - Image object
  @param {string} [width] - The width of the image
  @param {string} [height] - The height of the image
  @param {string} [alt] - The alt text of the image
  @param {string} [class] - The class of the image
  @param {string} [id] - The id of the image
  @param {string} [sizes] - The sizes attribute of the image
  @param {string} [object_fit] - The object-fit of the image
  @param {boolean} [preload] - The preload of the image
  @param {string} [loading] - The loading of the image
  @param {boolean} [container] - The container of the image
  @param {string} [container_class] - The container class of the image
  @param {string} [widths] - The widths for srcset attribute (e.g. '200, 300, 400, 500')
  @param {string} [fetchpriority] - The fetchpriority of the image (e.g. 'high', 'low', 'auto')
  @param {string} [override_class] - Whether to override the default class (defaults to false)
  @param {string} [format] - The image format (e.g. 'webp', 'jpg', 'png')

  @example
  {% render 'image', image: product.featured_image, width: '400', loading: 'lazy' %}
{% enddoc %}

{%- assign container = container | default: false -%}

{%- if container -%}
  <div
    class='{{ container_class }} relative'
    style='padding-top: {{ 1 | divided_by: image.aspect_ratio | times: 100 }}%;'
  >
{%- endif -%}

{%- liquid
  assign fetchpriority = fetchpriority | default: 'auto'
  assign width = width | default: image.width
  assign height = height | default: image.height
  assign loading = loading | default: 'lazy'
  assign preload = preload | default: false, allow_false: true
  assign alt = alt | default: image.alt
  assign image_class = 'w-full block' | append: ' ' | append: class

  if override_class and class != blank
    assign image_class = class
  endif

  assign object_fit = object_fit | default: 'cover'
  assign widths = widths | default: null

  case object_fit
    when 'contain'
      assign image_class = image_class | append: ' object-contain'
    when 'cover'
      assign image_class = image_class | append: ' object-cover'
    when 'fill'
      assign image_class = image_class | append: ' object-fill'
    when 'none'
      assign image_class = image_class | append: ' object-none'
  endcase

  if preload
    assign loading = null
  endif

  if image != blank
    echo image | image_url: width: width, format: format | image_tag: loading: loading, id: id, sizes: sizes, class: image_class, widths: widths, fetchpriority: fetchpriority
  endif
-%}
{%- if container -%}
  </div>
{%- endif -%}
